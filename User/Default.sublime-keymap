[
  /* CTRL */

  { "keys": ["ctrl+-"], "command": "one_up", "args": {"negative": true} },
  { "keys": ["ctrl+="], "command": "one_up" },
  { "keys": ["ctrl+o"], "command": "open_file_path" },
  { "keys": ["ctrl+'"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Snippet: "} },
  { "keys": ["ctrl+b"], "command": "show_panel", "args": {"panel": "output.exec"} },
  { "keys": ["ctrl+b"], "command": "hide_panel",
    "context": [
      { "key": "panel", "operand": "output.exec" },
      { "key": "panel_visible" }
    ]
  },

  /* ALT */

  { "keys": ["alt+up"], "command": "swap_line_up" },
  { "keys": ["alt+down"], "command": "swap_line_down" },
  { "keys": ["alt+backspace"], "command": "dual_side_delete" },

  { "keys": ["alt+0"], "command": "unselect_others" },

  { "keys": ["alt+q"], "command": "expand_snippet" },
  { "keys": ["alt+p"], "command": "find_under_prev" },

  { "keys": ["alt+d"], "command": "chain", "args": {
    "commands": [
      ["move", {"by": "subwords", "forward": false}],
      ["move", {"by": "subword_ends", "extend": true, "forward": true}]
    ]
  }},
  { "keys": ["alt+d"], "command": "move", "args": {"by": "subword_ends", "extend": true, "forward": true},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    ]
  },

  { "keys": ["alt+z"], "command": "last_single_selection",
    "context": [{"key": "num_selections", "operator": "not_equal", "operand": 1}]
  },
  { "keys": ["alt+n"], "command": "find_under" },
  { "keys": ["alt+/"], "command": "show_file_path" },

  /* CTRL + SHIFT */

  { "keys": ["ctrl+shift+pageup"], "command": "move_view", "args": {"forward": false} },
  { "keys": ["ctrl+shift+pagedown"], "command": "move_view" },

  { "keys": ["ctrl+shift+o"], "command": "prompt_open_file" },
  { "keys": ["ctrl+shift+s"],  "command": "save_all_edited" },
  { "keys": ["ctrl+shift+c"], "command": "copy_path" },

  /* CTRL + ALT */

  { "keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false} },
  { "keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },
  { "keys": ["ctrl+alt+pageup"], "command": "select_to_left" },
  { "keys": ["ctrl+alt+pagedown"], "command": "select_to_right" },
  { "keys": ["ctrl+alt+enter"], "command": "insert_snippet", "args": {"contents": "\n\t${0:$SELECTION}\n"},
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": false}]
  },
  { "keys": ["ctrl+alt+space"], "command": "insert_snippet", "args": {"contents": " ${0:$SELECTION} "} },

  { "keys": ["ctrl+alt+w"], "command": "close_without_saving" },
  { "keys": ["ctrl+alt+i"], "command": "reindent", "args": {"single_line": true} },
  { "keys": ["ctrl+alt+o"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"}},
  { "keys": ["ctrl+alt+p"], "command": "prompt_select_workspace" },

  { "keys": ["ctrl+alt+a"], "command": "alignment" },
  { "keys": ["ctrl+alt+s"], "command": "selection_to_cursors" },
  { "keys": ["ctrl+alt+;"], "command": "chain", "args": {
    "commands": [
      ["move_to", {"extend": false, "to": "eol"}],
      ["insert", {"characters": ";\n"}]
    ]
  }},

  { "keys": ["ctrl+alt+z"], "command": "streamline_regions" },
  { "keys": ["ctrl+alt+x"], "command": "indent_to_braces" },
  { "keys": ["ctrl+alt+b"], "command": "build" },
  { "keys": ["ctrl+alt+,"], "command": "chain", "args": {
    "commands": [
      ["move_to", {"extend": false, "to": "eol"}],
      ["insert", {"characters": ",\n"}]
    ]
  }},
  { "keys": ["ctrl+alt+/"], "command": "new_window_for_project" },

  /* SHIFT + ALT */

  { "keys": ["shift+alt+f9"], "command": "toggle_ligatures" },
  { "keys": ["shift+alt+f11"], "command": "toggle_setting", "args": {"setting": "draw_indent_guides"} },
  { "keys": ["shift+alt+f12"], "command": "toggle_minimap" },

  { "keys": ["shift+alt+w"], "command": "insert_snippet",
    "args": {"contents": "<${1:p}>${2:$SELECTION}</${1/([^ ]+).*/$1/}>"}
  },
  { "keys": ["shift+alt+u"],  "command": "move_viewport_horizontally", "args": {"forward": false} },
  { "keys": ["shift+alt+i"],  "command": "move_viewport_horizontally", "args": {"forward": true}  },
  { "keys": ["shift+alt+z"],  "command": "reveal_in_side_bar" },
  { "keys": ["shift+alt+b"],  "command": "chimney", "args": {"interactive": true} },

  /* CTRL + SHIFT + ALT */

  { "keys": ["ctrl+shift+alt+-"], "command": "decrease_font_size" },
  { "keys": ["ctrl+shift+alt+="], "command": "increase_font_size" },
  { "keys": ["ctrl+shift+alt+b"], "command": "chimney", "args": {"kill": true} },

  /* L2: CTRL */

  { "keys": ["ctrl+k", "ctrl+o"], "command": "open_file_under_cursor"},
  { "keys": ["ctrl+k", "ctrl+p"], "command": "open_file" , "args": {"file": "${project}"} },

  { "keys": ["ctrl+k", "ctrl+s"], "command": "shrink_whitespace" },
  { "keys": ["ctrl+k", "ctrl+f"], "command": "fmt" },
  { "keys": ["ctrl+k", "ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to BOL.sublime-macro"} },
  { "keys": ["ctrl+k", "ctrl+'"], "command": "toggle_setting", "args": {"setting": "word_wrap"} },

  { "keys": ["ctrl+k", "ctrl+m"], "command": "select_between_markers" },

  /* L3: CTRL */

  { "keys": ["ctrl+j", "ctrl+i"], "command": "expand_selection", "args": {"to": "indentation" } },

  { "keys": ["ctrl+j", "ctrl+d"], "command": "convert_case" },
  { "keys": ["ctrl+j", "ctrl+f"], "command": "copy_file_path" },

  { "keys": ["ctrl+j", "ctrl+c"], "command": "copy_as_one_line" },

  /* SEARCH WIDGET */

  { "keys": ["alt+s"], "command": "toggle_in_selection",  "context": [{"key": "setting.is_widget"}] },
  { "keys": ["alt+b"], "command": "toggle_use_buffer",    "context": [{"key": "setting.is_widget"}] },

  /* UNBOUND */

  { "keys": ["ctrl+shift+-"], "command": "unbound" },
  { "keys": ["ctrl+shift+="], "command": "unbound" },

  /* SMART KEYS */

  { "keys": ["enter"], "command": "run_macro_file",
    "args": {"file": "Packages/Default/Add Line in Braces.sublime-macro"},
    "context": [
      { "key": "setting.auto_indent", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
    ]
  },

  { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },

  { "keys": ["backspace"], "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
    ]
  },

  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    ]
  },

  { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.rust" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[&<]$", "match_all": true }
    ]
  },

  { "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$\\{${0:$SELECTION}\\}"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.shell" },
    ]
  },

  { "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$(${0:$SELECTION})"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.makefile" },
    ]
  },
]
