[
  /** UNBOUND **/

  { "keys": ["alt+shift+w"],  "command": "unbound" },
  { "keys": ["ctrl+="],       "command": "unbound" },
  { "keys": ["ctrl+-"],       "command": "unbound" },
  { "keys": ["ctrl+shift+-"], "command": "unbound" },

  /** COMMON **/

  { "keys": ["shift+alt+up"], "command": "select_lines", "args": {"forward": false} },
  { "keys": ["shift+alt+down"], "command": "select_lines", "args": {"forward": true} },

  { "keys": ["alt+up"], "command": "swap_line_up" },
  { "keys": ["alt+down"], "command": "swap_line_down" },

  { "keys": ["ctrl+alt+right"], "command": "scroll_width", "args": {"amount": 20} },
  { "keys": ["ctrl+alt+left"], "command": "scroll_width", "args": {"amount": -20} },

  { "keys": ["ctrl+alt+/"], "command": "new_window_for_project" },

  { "keys": ["ctrl+shift+c"], "command": "copy_path" },
  { "keys": ["shift+alt+z"],  "command": "reveal_in_side_bar" },

  { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "brackets"} },

  { "keys": ["alt+["], "command": "prev_view" },
  { "keys": ["alt+]"], "command": "next_view" },

  { "keys": ["alt+z"], "command": "jump_back" },
  { "keys": ["alt+x"], "command": "jump_forward" },

  { "keys": ["alt+n"], "command": "find_under" },
  { "keys": ["alt+p"], "command": "find_under_prev" },
  { "keys": ["shift+alt+n"], "command": "find_under_prev" },

  { "keys": ["ctrl+shift+o"], "command": "prompt_open_file" },
  { "keys": ["ctrl+shift+s"], "command": "save_all" },
  { "keys": ["ctrl+alt+s"],   "command": "prompt_save_as" },
  { "keys": ["ctrl+shift+o"], "command": "prompt_open_file" },

  { "keys": ["ctrl+alt+p"], "command": "prompt_select_workspace" },

  { "keys": ["ctrl+alt+b"], "command": "build" },

  { "keys": ["alt+/"], "command": "show_file_path" },
  { "keys": ["ctrl+alt+z"], "command": "streamline_regions" },
  { "keys": ["ctrl+shift+alt+p"], "command": "get_selection_scope" },
  { "keys": ["ctrl+alt+a"], "command": "alignment" },

  { "keys": ["ctrl+k", "ctrl+p"], "command": "open_file" , "args": {"file": "${project}"} },

  { "keys": ["ctrl+k", "ctrl+o"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"}},
  { "keys": ["ctrl+k", "ctrl+n"], "command": "clone_file" },
  { "keys": ["ctrl+k", "ctrl+s"], "command": "shrink_whitespace" },
  { "keys": ["ctrl+k", "ctrl+t"], "command": "title_case" },
  { "keys": ["ctrl+k", "ctrl+e"], "command": "select_with_custom_markers" },
  { "keys": ["ctrl+k", "ctrl+i"], "command": "reindent", "args": {"single_line": false} },

  { "keys": ["ctrl+k", "ctrl+m"], "command": "toggle_minimap" },
  { "keys": ["ctrl+k", "ctrl+,"], "command": "toggle_indent_guides" },
  { "keys": ["ctrl+k", "ctrl+."], "command": "toggle_ligatures" },
  { "keys": ["ctrl+k", "ctrl+'"], "command": "toggle_setting_verbose", "args": {"setting": "word_wrap"}},

  { "keys": ["shift+escape"], "command": "last_single_selection",
    "context": [
      {"key": "num_selections", "operator": "not_equal", "operand": 1}
    ]
  },

  { "keys": ["alt+backspace"], "command": "toggle_overwrite" },

  { "keys": ["ctrl+shift+alt+-"], "command": "decrease_font_size" },
  { "keys": ["ctrl+shift+alt+="], "command": "increase_font_size" },

  /** SEARCH WIDGET **/

  { "keys": ["alt+s"], "command": "toggle_in_selection",  "context": [{"key": "setting.is_widget"}] },
  { "keys": ["alt+b"], "command": "toggle_use_buffer",    "context": [{"key": "setting.is_widget"}] },

  /** QUICK MENU **/

  { "keys": ["alt+f12"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Set Syntax: "} },
  { "keys": ["ctrl+'"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Snippet: "} },

  /** PANELS **/

  { "keys": ["ctrl+o"], "command": "open_file_path" },

  { "keys": ["ctrl+b"], "command": "show_panel", "args": {"panel": "output.exec"} },
  { "keys": ["ctrl+b"], "command": "hide_panel",
    "context": [
      { "key": "panel", "operand": "output.exec" },
      { "key": "panel_visible" }
    ]
  },

  /** XML **/

  { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "tag"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.xml" }
    ]
  },

  { "keys": ["shift+alt+a"], "command": "expand_selection", "args": {"to": "tag"} },
  { "keys": ["shift+alt+a"], "command": "expand_selection", "args": {"to": "brackets"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.xml" }
    ]
  },

  { "keys": ["shift+alt+,"], "command": "insert_snippet",
    "args": {"contents": "<${1:p}>${2:$SELECTION}</${1/([^ ]+).*/$1/}>"}
  },

  /** MACRO **/

  { "keys": ["ctrl+alt+enter"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_indent.sublime-macro" },
    "context": [
      { "key": "setting.is_widget", "operator": "equal", "operand": false }
    ]
  },

  { "keys": ["ctrl+alt+space"], "command": "insert_snippet", "args": {"contents": " ${0:$SELECTION} "},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },

  { "keys": ["alt+ctrl+;"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_semicolon.sublime-macro"}
  },

  { "keys": ["alt+ctrl+,"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_comma.sublime-macro"},
  },

  { "keys": ["ctrl+k", "ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to BOL.sublime-macro"} },

  /** SMART KEYS **/

  { "keys": ["enter"], "command": "run_macro_file",
    "args": {"file": "Packages/Default/Add Line in Braces.sublime-macro"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[{\\[]$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^[}\\]]", "match_all": true }
    ]
  },

  { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.java" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[A-Z][a-z]*(<.*>)?$", "match_all": true }
    ]
  },

  { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<$0>"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.java" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[A-Z][a-z]*$", "match_all": true }
    ]
  },

  { "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.java" },
      { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
    ]
  },

  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    ]
  }
]
