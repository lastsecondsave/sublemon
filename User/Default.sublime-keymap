[
  /** UNBOUND **/

  { "keys": ["ctrl+shift+b"], "command": "unbound" },
  { "keys": ["alt+shift+w"],  "command": "unbound" },
  { "keys": ["ctrl+;"],       "command": "unbound" },
  { "keys": ["alt+q"],        "command": "unbound" },

  /** COMMON **/

  { "keys": ["alt+up"],   "command": "swap_line_up" },
  { "keys": ["alt+down"], "command": "swap_line_down" },

  { "keys": ["ctrl+alt+/"], "command": "new_window_for_project" },
  { "keys": ["ctrl+alt+."], "command": "open_file" , "args": {"file": "${project}"} },

  { "keys": ["ctrl+shift+c"], "command": "copy_path" },
  { "keys": ["shift+alt+z"],  "command": "reveal_in_side_bar" },
  { "keys": ["ctrl+alt+v"],   "command": "paste_from_history" },

  { "keys": ["ctrl+k", "ctrl+;"], "command": "clone_file" },

  { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "brackets"} },

  { "keys": ["alt+z"], "command": "jump_back" },
  { "keys": ["alt+x"], "command": "jump_forward" },

  { "keys": ["ctrl+shift+s"], "command": "save_all" },
  { "keys": ["ctrl+alt+s"],   "command": "prompt_save_as" },
  { "keys": ["ctrl+shift+o"], "command": "prompt_open_file" },

  { "keys": ["alt+/"],  "command": "show_file_path" },

  { "keys": ["ctrl+k", "ctrl+o"], "command": "clone_file" },
  { "keys": ["ctrl+k", "ctrl+;"], "command": "diff_changes" },
  { "keys": ["ctrl+k", "ctrl+n"], "command": "toggle_menu" },
  { "keys": ["ctrl+k", "ctrl+m"], "command": "toggle_minimap" },
  { "keys": ["ctrl+k", "ctrl+,"], "command": "toggle_indent_guides" },
  { "keys": ["ctrl+k", "ctrl+/"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},
  { "keys": ["ctrl+k", "ctrl+q"], "command": "toggle_draw_centered" },

  { "keys": ["ctrl+alt+shift+f"], "command": "show_panel", "args": {"panel": "output.find_results"} },

  { "keys": ["escape"], "command": "hide_panel", "args": {"cancel": true},
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": true}]
  },

  /** SEARCH WIDGET **/

  { "keys": ["alt+q"], "command": "toggle_in_selection",
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": true}]
  },

  { "keys": ["alt+d"], "command": "toggle_reverse",
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": true}]
  },

  { "keys": ["alt+b"], "command": "toggle_use_buffer",
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": true}]
  },

  /** QUICK MENU **/

  { "keys": ["ctrl+q"],  "command": "show_overlay", "args": {"overlay": "goto", "text": "#"} },

  { "keys": ["alt+f12"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Set Syntax: "} },
  { "keys": ["alt+."],   "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Snippet: "} },
  { "keys": ["ctrl+f7"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Build With: "} },

  /** BUILD PANEL **/

  { "keys": ["ctrl+b"],  "command": "show_panel", "args": {"panel": "output.exec"} },

  { "keys": ["ctrl+b"], "command": "hide_panel",
    "context": [{"key": "panel_visible", "operator": "equal", "operand": true}]
  },

  { "keys": ["ctrl+b"], "command": "show_panel", "args": {"panel": "output.exec"},
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": true}]
  },

  /** BUILD **/

  { "keys": ["f7"],            "command": "build" },
  { "keys": ["ctrl+shift+f7"], "command": "build", "args": {"select": true} },

  /** XML **/

  { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "tag"},
    "context": [{"key": "selector", "operator": "equal", "operand": "source.xml"}]
  },

  { "keys": ["shift+alt+a"], "command": "expand_selection", "args": {"to": "tag"} },
  { "keys": ["shift+alt+a"], "command": "expand_selection", "args": {"to": "brackets"},
    "context": [{"key": "selector", "operator": "equal", "operand": "source.xml"}]
  },

  { "keys": ["shift+alt+."], "command": "close_tag" },

  { "keys": ["alt+shift+,"], "command": "insert_snippet",
    "args": {"name": "Packages/Snippets/xml_snippets/tag.sublime-snippet"}
  },

  /** PLUGINS **/

  { "keys": ["alt+f6"],     "command": "toggle_selection_scope" },
  { "keys": ["ctrl+alt+z"], "command": "normalize_region_ends" },

  { "keys": ["ctrl+alt+right"], "command": "scroll_width", "args": {"amount": 26,  "by_character": false} },
  { "keys": ["ctrl+alt+left"],  "command": "scroll_width", "args": {"amount": -26, "by_character": false} },

  /** MACRO **/

  { "keys": ["ctrl+f12"],       "command": "run_macro" },
  { "keys": ["ctrl+shift+f12"], "command": "toggle_record_macro" },

  { "keys": ["ctrl+alt+enter"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_indent.sublime-macro" },
    "context": [{"key": "setting.is_widget", "operator": "equal", "operand": false}]
  },

  { "keys": ["ctrl+alt+space"], "command": "insert_snippet", "args": {"contents": " ${0:$SELECTION} "},
    "context": [{"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true}]
  },

  { "keys": ["ctrl+;"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_semicolon.sublime-macro"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.java, source.js, source.c++" },
    ]
  },

  { "keys": ["ctrl+shift+;"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_colon.sublime-macro"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.json, source.yaml, source.python, source.css" },
    ]
  },

  { "keys": ["ctrl+,"], "command": "run_macro_file",
    "args": {"file": "Packages/Sublemon/macro/add_comma.sublime-macro"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.java, source.js, source.c++, source.json, source.css" },
    ]
  },

  /** SMART KEYS **/

  { "keys": ["enter"], "command": "run_macro_file",
    "args": {"file": "Packages/Default/Add Line in Braces.sublime-macro"},
    "context": [
      { "key": "setting.auto_indent", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[{\\[]$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^[}\\]]", "match_all": true }
    ]
  },

  { "keys": ["("], "command": "insert_snippet", "args": {"contents": "($0)"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
    ]
  },

  { "keys": ["["], "command": "insert_snippet", "args": {"contents": "[$0]"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
    ]
  },

  { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
    ]
  },

  { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"},
    "context": [{"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true}]
  },

  { "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$(${0:$SELECTION})"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.shell" }
    ]
  },

  { "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\${${0:$SELECTION}}"},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.xml" }
    ]
  }
]
