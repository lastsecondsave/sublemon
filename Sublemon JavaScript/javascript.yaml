# [PackageDev] target_format: plist, ext: tmLanguage
name: JavaScript
scopeName: source.js
fileTypes: [js]
uuid: 93E017CC-6F27-11D9-90EB-000D93589AF6

patterns:
- name: comment.block.js
  match: /\*.*?\*/

- name: comment.block.js
  begin: /\*
  end: \*/

- name: comment.line.js
  match: //.*$

- name: entity.name.function.js
  match: \b[\w_$]+(?=\s*[:=]\s*function\b)

- name: meta.function.js
  begin: \b(function)(?:\s+([\w_$]+))?\s*\(
  beginCaptures:
    '1': {name: storage.type.function.js}
    '2': {name: entity.name.function.js}
  end: \)
  patterns:
  - name: variable.parameter.function.js
    match: '[\w_]+'

- name: constant.numeric.hex.js
  match: \b0[xX]\h+\b

- name: constant.numeric.js
  match: (?<!\w)(?>((0|[1-9][0-9]*)(\.[0-9]*)?|\.[0-9]+)([eE][+-]?[0-9]+)?)(?!\w)

- name: constant.language.js
  match: \b(false|Infinity|NaN|null|true|undefined)\b

- name: variable.language.js
  match: \b(this)\b

- name: storage.type.js
  match: \b(var|let)\b

- name: punctuation.terminator.statement.js
  match: ';'

- name: string.quoted.single.js
  begin: "'"
  end: "'|$"
  patterns:
  - include: '#escapes'

- name: string.quoted.double.js
  begin: '"'
  end: '"|$'
  patterns:
  - include: '#escapes'

- begin: (?<=[=(:,]|^|return|&&|\|\||!|\?)\s*(?=/[^/*+?])
  end: (?<=[/igm])
  patterns:
  - name: string.regexp.js
    contentName: source.regexp.js
    begin: '/'
    end: /[igm]*
    patterns:
    - include: source.regexp

- name: keyword.control.js
  match: \b(break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while|yield|delete)\b

- name: keyword.operator.js
  match: \b(in|typeof|void|with)\b

- name: keyword.operator.logical.js
  match: '&&|\|\|'

- name: keyword.operator.assignment.js
  match: '([+*/%&^|-]|<<|>>>?)?='

- name: keyword.operator.comparison.js
  match: '===?|!==?|<=|>=|<>|<|>'

- name: keyword.operator.arithmetic.js
  match: '/|%|\*|\-\-|\-|\+\+|\+'

- name: keyword.operator.bitwise.js
  match: '&|\|'

- name: keyword.operator.unary.logical.js
  match: '!'

- name: keyword.operator.unary.bitwise.js
  match: '~'

- begin: '\?'
  end: ':'
  captures:
    '0': {name: keyword.control.ternary.js}
  patterns:
  - include: $self

- name: support.constant.js
  match: \b(console|window|document)\b

- name: support.class.js
  match: \b(JSON|Math|Object|Function)\b

- name: support.function.js
  match: \b(decodeURI(Component)?|encodeURI(Component)?|eval|is(Finite|NaN)|parse(Float|Int))\b

- match: \b(new)\s+([\w_$]+)\b
  captures:
    '1': {name: keyword.control.js}
    '2': {name: support.class.js}

- match: \b(instanceof)\s+([\w_$]+)\b
  captures:
    '1': {name: keyword.operator.js}
    '2': {name: support.class.js}

- match: \b([\w_$]+)\.(prototype)\b
  captures:
    '1': {name: support.class.js}
    '2': {name: keyword.other.js}

- name: variable.constant.js
  match: \b([A-Z][A-Z0-9_]+)\b

repository:
  escapes:
    patterns:
    - name: constant.character.escape.js
      match: \\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)

