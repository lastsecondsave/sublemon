# [PackageDev] target_format: plist, ext: tmLanguage
name: YAML
scopeName: source.yaml
fileTypes: [yaml, yml]
uuid: 2BDCCC99-FE27-4B30-9923-32D39B01C5CA

patterns:
- include: '#comments'
- include: '#flow-yaml'

- name: keyword.operator.yaml
  match: '^(---|\.{3})'

- match: '(-) '
  captures:
    '1': {name: keyword.operator.yaml}

- name: meta.match-group.yaml
  begin: '(?=\bname: )'
  end: '$'
  patterns:
  - include: '#yaml'

- contentName: source.regexp.yaml
  begin: (match|begin|end|\w*(?:Pattern|Match|Marker))(:)\s+(['"])?
  beginCaptures:
    '1': {name: entity.name.key.yaml}
    '2': {name: punctuation.separator.mapping.yaml}
    '3': {name: string.quoted.yaml}
  end: (['\"])?\s*(?=\s#|$)
  endCaptures:
    '1': {name: string.quoted.yaml}
  patterns:
  - include: source.regexp

- include: '#yaml'

repository:
  yaml:
    patterns:
    - match: (?:^|(?<=\s))([>\|]-?)
      captures:
        '1': {name: keyword.operator.yaml}
    - include: '#keys'
    - include: '#scalars'
    - match: (\S.*?)\s*(?=\s#|$)
      captures:
        '1': {name: string.unquoted.yaml}

  flow-yaml:
    patterns:
    - name: meta.section.flow.yaml
      begin: '\{'
      end: '\}'
      captures:
        '0': {name: punctuation.section.flow.yaml}
      patterns:
      - include: '#flow-yaml-internals'
    - name: meta.section.flow.yaml
      begin: '\['
      end: '\]'
      captures:
        '0': {name: punctuation.section.flow.yaml}
      patterns:
      - include: '#flow-yaml-internals'

  flow-yaml-internals:
    patterns:
    - include: '#flow-yaml'
    - include: '#keys'
    - include: '#scalars'
    - include: '#comments'
    - match: ([^\,\]\}\s].*?)\s*(?=[\,\]\}]|\s#|$)
      captures:
        '1': {name: string.unquoted.yaml}

  comments:
    patterns:
    - name: comment.line.number-sign.yaml
      match: (?:^|(?<=\s))#.*$

  keys:
    patterns:
    - name: meta.key.yaml
      begin: (?=".+?":\s)
      end: '\s*(:)\s'
      endCaptures:
        '1': {name: punctuation.separator.mapping.yaml}
      patterns:
      - name: string.quoted.double.yaml
        contentName: entity.name.key.yaml
        begin: '"'
        end: '"'
        captures:
          '0': {name: punctuation.definition.string.yaml}
        patterns:
        - include: '#escapes'
    - name: meta.key.yaml
      match: ('(.+?)')\s*(:)(?:\s|$)
      captures:
        '1': {name: string.quoted.single.yaml}
        '2': {name: entity.name.key.yaml}
        '3': {name: punctuation.separator.mapping.yaml}
    - name: meta.key.yaml
      match: "([^\\s'\"].+?)\\s*(:)(?:\\s|$)"
      captures:
        '1': {name: entity.name.key.yaml}
        '2': {name: punctuation.separator.mapping.yaml}

  scalars:
    patterns:
    - include: '#quoted-strings'
    - include: '#numbers-and-constants'

  quoted-strings:
    patterns:
    - name: string.quoted.double.yaml
      begin: '"'
      end: '"'
      captures:
        '0': {name: punctuation.definition.string.yaml}
      patterns:
      - include: '#escapes'
    - name: string.quoted.single.yaml
      begin: "'"
      end: "'"
      captures:
        '0': {name: punctuation.definition.string.yaml}

  numbers-and-constants:
    patterns:
    - name: constant.numeric.yaml
      match: \b(0x[0-9a-fA-F]+|0o[0-7]+|[-+]?[0-9]+|[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?)\b
    - name: constant.language.yaml
      match: \b([Tt]rue|TRUE|[Ff]alse|FALSE|[Nn]ull|NULL|\.nan|\.N[Aa]N|[-+]?\.([Ii]nf|INF))\b

  escapes:
    patterns:
    - name: constant.character.escape.yaml
      match: \\[0abtnvfre"/\\N_LP]
    - name: constant.character.escape.unicode.yaml
      match: \\(x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})
    - name: invalid.illegal.escape.yaml
      match: \\.
