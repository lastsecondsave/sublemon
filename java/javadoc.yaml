# [PackageDev] target_format: plist, ext: tmLanguage
name: JavaDoc
scopeName: text.html.javadoc
fileTypes: []
uuid: 64BB98A4-59D4-474E-9091-C1E1D04BDD03

patterns:
- name: comment.block.documentation.javadoc
  begin: (/\*\*)\s*$
  beginCaptures:
    '1': {name: punctuation.definition.comment.begin.javadoc}
  end: \*/
  endCaptures:
    '0': {name: punctuation.definition.comment.javadoc}
  patterns:
  - include: '#invalid'
  - name: meta.documentation.comment.javadoc
    contentName: text.html
    begin: \*\s*(?=\w)
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.param.javadoc
    contentName: text.html
    begin: \*\s*((\@)param)
    beginCaptures:
      '1': {name: keyword.other.documentation.param.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.return.javadoc
    contentName: text.html
    begin: \*\s*((\@)return)
    beginCaptures:
      '1': {name: keyword.other.documentation.return.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.throws.javadoc
    contentName: text.html
    begin: \*\s*((\@)throws)
    beginCaptures:
      '1': {name: keyword.other.documentation.throws.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.exception.javadoc
    contentName: text.html
    begin: \*\s*((\@)exception)
    beginCaptures:
      '1': {name: keyword.other.documentation.exception.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.author.javadoc
    contentName: text.html
    begin: \*\s*((\@)author)
    beginCaptures:
      '1': {name: keyword.other.documentation.author.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.version.javadoc
    contentName: text.html
    begin: \*\s*((\@)version)
    beginCaptures:
      '1': {name: keyword.other.documentation.version.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.see.javadoc
    contentName: text.html
    begin: \*\s*((\@)see)
    beginCaptures:
      '1': {name: keyword.other.documentation.see.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.since.javadoc
    contentName: text.html
    begin: \*\s*((\@)since)
    beginCaptures:
      '1': {name: keyword.other.documentation.since.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.serial.javadoc
    contentName: text.html
    begin: \*\s*((\@)serial)
    beginCaptures:
      '1': {name: keyword.other.documentation.serial.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.serialField.javadoc
    contentName: text.html
    begin: \*\s*((\@)serialField)
    beginCaptures:
      '1': {name: keyword.other.documentation.serialField.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.serialData.javadoc
    contentName: text.html
    begin: \*\s*((\@)serialData)
    beginCaptures:
      '1': {name: keyword.other.documentation.serialData.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - name: meta.documentation.tag.deprecated.javadoc
    contentName: text.html
    begin: \*\s*((\@)deprecated)
    beginCaptures:
      '1': {name: keyword.other.documentation.deprecated.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}
    end: (?=\s*\*\s*@)|(?=\s*\*\s*/)
    patterns:
    - include: '#inline'
  - match: \*\s*((\@)\S+)\s
    captures:
      '1': {name: keyword.other.documentation.custom.javadoc}
      '2': {name: punctuation.definition.keyword.javadoc}

repository:
  inline:
    patterns:
    - include: '#invalid'
    - include: '#inline-formatting'
    - include: text.html.basic
    - name: markup.underline.link
      match: ((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&#]+(?<![.?:])

  inline-formatting:
    patterns:
    - name: meta.directive.code.javadoc
      contentName: markup.raw.code.javadoc
      begin: (\{)((\@)code)
      beginCaptures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.code.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
      end: \}
      endCaptures:
        '0': {name: punctuation.definition.directive.end.javadoc}
      patterns: []
    - name: meta.directive.literal.javadoc
      contentName: markup.raw.literal.javadoc
      begin: (\{)((\@)literal)
      beginCaptures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.literal.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
      end: \}
      endCaptures:
        '0': {name: punctuation.definition.directive.end.javadoc}
      patterns: []
    - name: meta.directive.docRoot.javadoc
      match: (\{)((\@)docRoot)(\})
      captures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.docRoot.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
        '4': {name: punctuation.definition.directive.end.javadoc}
    - name: meta.directive.inheritDoc.javadoc
      match: (\{)((\@)inheritDoc)(\})
      captures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.inheritDoc.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
        '4': {name: punctuation.definition.directive.end.javadoc}
    - name: meta.directive.link.javadoc
      match: (\{)((\@)link)(?:\s+(\S+?))?(?:\s+(.+?))?\s*(\})
      captures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.link.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
        '4': {name: markup.underline.link.javadoc}
        '5': {name: string.other.link.title.javadoc}
        '6': {name: punctuation.definition.directive.end.javadoc}
    - name: meta.directive.linkplain.javadoc
      match: (\{)((\@)linkplain)(?:\s+(\S+?))?(?:\s+(.+?))?\s*(\})
      captures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.linkplain.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
        '4': {name: markup.underline.linkplain.javadoc}
        '5': {name: string.other.link.title.javadoc}
        '6': {name: punctuation.definition.directive.end.javadoc}
    - name: meta.directive.value.javadoc
      match: (\{)((\@)value)\s*(\S+?)?\s*(\})
      captures:
        '1': {name: punctuation.definition.directive.begin.javadoc}
        '2': {name: keyword.other.documentation.directive.value.javadoc}
        '3': {name: punctuation.definition.keyword.javadoc}
        '4': {name: variable.other.javadoc}
        '5': {name: punctuation.definition.directive.end.javadoc}

  invalid:
    patterns:
    - name: invalid.illegal.missing-asterisk.javadoc
      match: ^(?!\s*\*).*$\n?
foldingStartMarker: /\*\*
foldingStopMarker: \*\*/
