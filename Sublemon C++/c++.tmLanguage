<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>c</string>
		<string>h</string>
		<string>cpp</string>
		<string>hpp</string>
		<string>cu</string>
		<string>cuh</string>
	</array>
	<key>name</key>
	<string>C/C++</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#typedef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inner-code</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>^\s*(?=/[*/])</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>//[/!].*$</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.documentation.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#doxygen</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>/\*\*/</string>
					<key>name</key>
					<string>comment.block.empty.c</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*[\*!]</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#doxygen</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(/\*).*?(\*/)</string>
					<key>name</key>
					<string>comment.block.c</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.c</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(0[xX][0-9a-fA-F]+|0[0-7]+)\b</string>
					<key>name</key>
					<string>constant.numeric.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?&lt;=\s|[=+*/%-(]|^)-)?\b[0-9]+\.?[0-9]*([eE][+-]?[0-9]+)?([uU]?[lL][lL]|[fF])?\b</string>
					<key>name</key>
					<string>constant.numeric.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(nullptr|true|false)\b</string>
					<key>name</key>
					<string>constant.language.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(NULL|TRUE|FALSE)\b</string>
					<key>name</key>
					<string>constant.language.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this)\b</string>
					<key>name</key>
					<string>variable.language.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>L?'(\\([abfnrt'"\\]|[0-7]{3}|x[0-9a-fA-F]{2})|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|.)'</string>
					<key>name</key>
					<string>constant.character.c++</string>
				</dict>
			</array>
		</dict>
		<key>doxygen</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.doxygen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.doxygen</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=\s)([\\@]param(?:\[.*\])?)\s+(\w[\w,.]*)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.doxygen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.doxygen</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=\s)([\\@](?:file|exception|throws?))\s+(\w[\w,.]*)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)[\\@]\w+</string>
					<key>name</key>
					<string>keyword.other.doxygen</string>
				</dict>
			</array>
		</dict>
		<key>function-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?==)</string>
					<key>end</key>
					<string>(?=[,)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#inner-code</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\w+)\s*(?=[,)\[=])</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+</string>
					<key>name</key>
					<string>storage.type.c++</string>
				</dict>
			</array>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\w~_][^=;]+\()</string>
					<key>end</key>
					<string>(})|(?=;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.c++</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\))\s*:</string>
							<key>end</key>
							<string>\s*(?=[{;])</string>
							<key>name</key>
							<string>meta.initialise-list.c++</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#inner-code-with-brackets</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[\w:]*(~?\w|operator(\(\)|\S+?))+\s*\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.c</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)(?:\s*(const))?</string>
							<key>name</key>
							<string>meta.function.identifier.c++</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?=[\w:]*(~?\w|operator(\(\)|\S+?))+\s*\()</string>
									<key>end</key>
									<string>(?=\()</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>operator(\(\)|\S+?)(?=\s*\()</string>
											<key>name</key>
											<string>entity.name.function.c++</string>
										</dict>
										<dict>
											<key>match</key>
											<string>~?\w+(?=\s*\()</string>
											<key>name</key>
											<string>entity.name.function.c++</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\w+</string>
											<key>name</key>
											<string>storage.modifier.namespace.c++</string>
										</dict>
										<dict>
											<key>match</key>
											<string>::</string>
											<key>name</key>
											<string>punctuation.separator.namespace.c++</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>end</key>
									<string>(?=\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#function-parameters</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.function.c++</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>name</key>
							<string>meta.function.body.c++</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#inner-code-with-brackets</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\w+</string>
							<key>name</key>
							<string>storage.type.c++</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\S+;</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inner-code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macros</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#winapi</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lambda</string>
				</dict>
			</array>
		</dict>
		<key>inner-code-on-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code-with-brackets</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code-with-brackets</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inner-code-with-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inner-code-on-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inner-code</string>
				</dict>
			</array>
		</dict>
		<key>lambda</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:^|(?&lt;=[\s,]))(?=\[.*?\]\s*\()</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\[[=&amp;]?)(?=.*?\]\s*\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.lambda.capture-list.c++</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#inner-code</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-parameters</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>macros</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(#)(?=\s*\w+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;!\\)\n</string>
					<key>name</key>
					<string>meta.macro.c</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.macro.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>string.quoted.macro.c</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>invalid.macro.c</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;=#)\s*(include)\s*(".*"|&lt;.*&gt;|(.*))</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=#)\s*(define)\s+(\w+)\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.macro.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.macro.c</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\w+</string>
									<key>name</key>
									<string>variable.parameter.macro.c</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.macro.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.constant.macro.c</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;=#)\s*(define)\s*(\w+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.macro.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.constant.macro.c</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;=#)\s*(ifn?def|undef)\s*(\w+)</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=#)\s*(\w+)</string>
							<key>name</key>
							<string>keyword.macro.c</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.macro.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.constant.macro.c</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.constant.macro.c</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(defined)(?:\s*\((\w+)\)|\s+(\w+))</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\$</string>
							<key>name</key>
							<string>punctuation.separator.line.macro.c</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constants</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>meta.macro.body.c</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(return|break|case|continue|default|do|while|for|switch|if|else|goto)\b</string>
					<key>name</key>
					<string>keyword.control.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(try|catch|throw|new|delete)\b</string>
					<key>name</key>
					<string>keyword.control.c++</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?:const|dynamic|reinterpret|static)_cast)&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.character.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>name</key>
					<string>meta.operator.cast.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ternary.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>:</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;&lt;&lt;</string>
					<key>end</key>
					<string>&gt;&gt;&gt;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;![&lt;=])&lt;(?![&lt;=])(?=\w.*?[\w&gt;*)]&gt;)</string>
					<key>end</key>
					<string>&gt;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(sizeof|decltype)\b</string>
					<key>name</key>
					<string>support.function.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[&amp;|+-]{1,2}|([+*/%&amp;^|&lt;&gt;=-]|&lt;&lt;|&gt;&gt;&gt;?)=?|!=|-&gt;</string>
					<key>name</key>
					<string>keyword.operator.symbolic.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!</string>
					<key>name</key>
					<string>keyword.operator.unary.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.c</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(using(?:\s+namespace))\s+(\w+)</string>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(const|extern|register|restrict|static|volatile|inline)\b</string>
					<key>name</key>
					<string>storage.modifier.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(friend|explicit|virtual|private|public|protected|mutable)\b</string>
					<key>name</key>
					<string>storage.modifier.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b__(shared|constant|global)__\b</string>
					<key>name</key>
					<string>storage.modifier.cuda</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(void|unsigned|char|short|int|long|float|double|struct)\b</string>
					<key>name</key>
					<string>storage.type.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(auto|bool|wchar_t|__int(8|16|32|64))\b</string>
					<key>name</key>
					<string>storage.type.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(size_t|FILE|fpos_t)\b</string>
					<key>name</key>
					<string>support.type.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(cuda\w+_t)\b</string>
					<key>name</key>
					<string>support.type.cuda.c</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.namespace.c++</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.c++</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.std.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(std)(::)(array|vector|pair|(unordered_)?map|w?string|[io]?fstream|ios|streampos|(?:runtime|logic)_error|exception|(?:shared|auto|unique|weak)_ptr)?\b</string>
					<key>name</key>
					<string>meta.std.c++</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>L?"</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")|$</string>
					<key>name</key>
					<string>string.quoted.double.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\([abfnrt'"\\]|[0-7]{3}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})</string>
							<key>name</key>
							<string>constant.character.escape.c++</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typedef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(typedef)\s+(?=.*?\(\*.*?\))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.c</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.typedef.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.asterisk.c</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.typedef.c++</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\((\*)\b(.*?)\b\)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-parameters</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(typedef)\s+(?=.+?\w+\s*;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\w+)\s*(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.typedef.c++</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.c</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.typedef.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inner-code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.c++</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.support.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(namespace|union)\s+(\w+)</string>
					<key>name</key>
					<string>meta.type.identifier.c++</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((class|struct|enum)\s+(\w+)?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.type.identifier.c++</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.c++</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.c++</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})|(?=;)</string>
					<key>name</key>
					<string>meta.type.c++</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.type.c++</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>name</key>
							<string>meta.type.body.c++</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#inner-code-on-brackets</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>winapi</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(LP|P)?(VOID|CHAR|BYTE|D?WORD|U?INT(32|64)|U?LONG(LONG)?|BOOL|HANDLE|CS[WT]?TR)\b</string>
					<key>name</key>
					<string>support.type.winapi.c</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bP?(LARGE_INTEGER)\b</string>
					<key>name</key>
					<string>support.type.winapi.c</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.c++</string>
</dict>
</plist>
