# [PackageDev] target_format: plist, ext: tmLanguage
name: XML
scopeName: source.xml
fileTypes: [xml]
uuid: D3C4E6DA-6B1C-11D9-8CC2-000D93589AF6

patterns:
- include: '#comments'

- name: meta.tag.preprocessor.xml
  begin: (<\?)\s*([-.\w]+)
  end: '\?>'
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: entity.name.tag.xml}
  endCaptures:
    '0': {name: punctuation.definition.tag.end.xml}
  patterns:
  - include: '#tag-attribute'

- name: source.mybatis
  begin: '(?=<!DOCTYPE.+mybatis\.org//DTD Mapper 3\.0//EN)'
  end: ^(?!x)x
  patterns:
  - include: '#doctype'
  - include: '#mybatis'
  - include: '#xml'

- name: source.maven
  begin: '(?=<project\s+xmlns=.http://maven\.apache\.org/POM)'
  end: ^(?!x)x
  patterns:
  - include: '#doctype'
  - include: '#maven'
  - include: '#xml'

- include: '#doctype'

- begin: (?=<[-.\w]+)
  end: ^(?!x)x
  patterns:
  - include: '#xml'

repository:
  xml:
    patterns:
    - include: '#comments'
    - include: '#tag'
    - name: meta.cdata.xml
      contentName: string.cdata.xml
      begin: <!\[CDATA\[
      beginCaptures:
        '0': {name: punctuation.definition.cdata.begin.xml}
      end: ']]>'
      endCaptures:
        '0': {name: punctuation.definition.cdata.end.xml}
    - include: '#entity'

  comments:
    patterns:
    - name: comment.block.xml
      begin: <[!#%]--
      end: -->
      captures:
        '0': {name: punctuation.definition.comment.xml}

  tag:
    patterns:
    - name: meta.tag.xml
      begin: (<)((?:([-.\w]+)(:))?([-.\w]+))
      end: '/?>'
      beginCaptures:
        '1': {name: punctuation.definition.tag.begin.xml}
        '2': {name: entity.name.tag.xml}
        '3': {name: entity.name.tag.namespace.xml}
        '4': {name: punctuation.separator.namespace.xml}
        '5': {name: entity.name.tag.localname.xml}
      endCaptures:
        '0': {name: punctuation.definition.tag.end.xml}
      patterns:
      - include: '#tag-attribute'
    - name: meta.tag.xml
      match: (</)((?:([-.\w]+)(:))?([-.\w]+))\s*(>)
      captures:
        '1': {name: punctuation.definition.tag.begin.xml}
        '2': {name: entity.name.tag.xml}
        '3': {name: entity.name.tag.namespace.xml}
        '4': {name: punctuation.separator.namespace.xml}
        '5': {name: entity.name.tag.localname.xml}
        '6': {name: punctuation.definition.tag.end.xml}

  tag-attribute:
    patterns:
    - name: meta.attribute.xml
      begin: "((?:([-.\\w]+)(:))?([-.\\w]+))(=)(['\"])"
      end: '\6'
      beginCaptures:
        '1': {name: entity.name.attribute.xml}
        '2': {name: entity.name.attribute.namespace.xml}
        '3': {name: punctuation.separator.namespace.xml}
        '4': {name: entity.name.attribute.localname.xml}
        '5': {name: punctuation.separator.attribute.xml}
        '6': {name: punctuation.definition.string.begin.xml}
      endCaptures:
        '0': {name: punctuation.definition.string.end.xml}
      contentName: string.attribute.xml
      patterns:
      - include: '#entity'

  entity:
    patterns:
    - name: constant.character.entity.xml
      match: (&)(?:[:a-zA-Z_][:\w.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)
      captures:
        '1': {name: punctuation.definition.constant.xml}
        '2': {name: punctuation.definition.constant.xml}
    - name: invalid.illegal.entity.xml
      match: '[&<>]'

  doctype:
    patterns:
    - name: meta.tag.sgml.doctype.xml
      begin: (<!)(DOCTYPE)\s+([-.\w]+)
      end: (>)
      captures:
        '1': {name: punctuation.definition.tag.xml}
        '2': {name: keyword.doctype.xml}
        '3': {name: variable.documentroot.xml}
      patterns:
      - name: meta.internal-subset.xml
        begin: \[
        end: \]
        patterns:
        - begin: (<!)(ENTITY)\s+(%)?\s*([:a-zA-Z_][:\w.-]*)(?:\s+(SYSTEM|PUBLIC)\s+)?
          end: (>)
          captures:
            '1': {name: punctuation.definition.tag.xml}
            '2': {name: keyword.entity.xml}
            '3': {name: punctuation.definition.entity.xml}
            '4': {name: variable.entity.xml}
            '5': {name: keyword.entity-type.xml}
          patterns:
          - include: '#quoted-strings'
        - match: (%)([:a-zA-Z_][:\w.-]*)(;)
          captures:
            '1': {name: punctuation.definition.constant.xml}
            '2': {name: constant.character.parameter-entity.xml}
            '3': {name: punctuation.definition.constant.xml}
      - include: '#quoted-strings'

  quoted-strings:
    patterns:
    - name: string.quoted.xml
      begin: "(['\"])"
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.xml}
      end: '\1'
      endCaptures:
        '0': {name: punctuation.definition.string.end.xml}
      patterns:
      - include: '#entity'

  mybatis:
    patterns:
    - name: meta.mapping.mybatis
      begin: (?=<(select|update|insert|delete)\s+)
      end: (?=</\1>)
      contentName: source.sql.mybatis
      patterns:
      - name: meta.tag.xml
        begin: (<)((?:([-.\w]+)(:))?([-.\w]+))
        end: '/?>'
        beginCaptures:
          '1': {name: punctuation.definition.tag.begin.xml}
          '2': {name: entity.name.tag.xml}
          '3': {name: entity.name.tag.namespace.xml}
          '4': {name: punctuation.separator.namespace.xml}
          '5': {name: entity.name.tag.localname.xml}
        endCaptures:
          '0': {name: punctuation.definition.tag.end.xml}
        patterns:
        - name: meta.attribute.xml.mybatis
          match: "(id)(=)(['\"])(.+?)(\\3)"
          captures:
            '1': {name: entity.name.attribute.xml}
            '2': {name: punctuation.separator.attribute.xml}
            '3': {name: punctuation.definition.string.begin.xml}
            '4': {name: entity.name.function.mybatis}
            '5': {name: punctuation.definition.string.end.xml}
        - include: '#tag-attribute'
      - include: '#tag'
      - include: '#entity'
      - begin: '[#$]\{'
        end: '\}'
        captures:
          '0': {name: keyword.other.mybatis}
        patterns:
        - match: (?:\s*(javaType|jdbcType|mode)\s*(=))?\s*([.\w]+)
          captures:
            '1': {name: keyword.other.mybatis}
            '2': {name: punctuation.separator.mybatis}
            '3': {name: variable.parameter.mybatis}
      - include: source.sql

  maven:
    patterns:
    - name: constant.maven
      match: '\$\{.*?\}'
