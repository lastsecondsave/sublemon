%YAML 1.2
---
name: XML
scope: source.xml
file_extensions: [xml]
first_line_match: '<\?xml.*\?>'

variables:
  id: '[-.\w]+'

contexts:
  prototype:
  - include: comments

  main:
  - match: '(<\?)\s*({{id}})'
    captures:
      1: punctuation.definition.tag.instruction.begin.xml
      2: entity.name.tag.instruction.xml
    push:
    - match: '\?>'
      scope: punctuation.definition.tag.instruction.end.xml
      pop: true
    - include: tag_internals
  - include: doctype
  - match: '(?=<{{id}})'
    push: xml

  xml:
  - include: tag
  - include: cdata
  - include: entities
  - include: substitutions

  comments:
  - match: "<!--"
    push:
    - meta_scope: comment.block.xml
    - match: "-->"
      pop: true
    - match: "--"
      scope: invalid.illegal.bad-comments.xml
  - match: "-->"
    scope: invalid.illegal.bad-comments.xml

  entities:
  - match: '&(?:[:a-zA-Z_][:\w.-]*|#[0-9]+|#x[0-9a-fA-F]+);'
    scope: constant.character.entity.xml
  - match: '[&<]'
    scope: invalid.illegal.entity.xml

  quoted_strings:
  - match: '([''"])'
    push:
    - meta_scope: string.quoted.xml
    - meta_include_prototype: false
    - match: \1
      pop: true
    - include: entities

  cdata:
  - match: '<!\[CDATA\['
    scope: punctuation.definition.cdata.xml
    push:
    - meta_scope: meta.cdata.xml
    - meta_content_scope: string.cdata.xml
    - meta_include_prototype: false
    - match: \]\]>
      scope: punctuation.definition.cdata.xml
      pop: true
    - include: substitutions

  tag:
  # Opening and single tag
  - match: '(<)(?:({{id}})(:))?({{id}})'
    captures:
      1: punctuation.definition.tag.begin.xml
      2: entity.name.tag.namespace.xml
      3: punctuation.separator.namespace.xml
      4: entity.name.tag.localname.xml
    push:
    - match: '/?>'
      scope: punctuation.definition.tag.end.xml
      pop: true
    - include: tag_internals
  # Closing tag
  - match: '(</)(?:({{id}})(:))?({{id}})\s*(>)'
    scope: meta.tag.xml
    captures:
      1: punctuation.definition.tag.begin.xml
      2: entity.name.tag.namespace.xml
      3: punctuation.separator.namespace.xml
      4: entity.name.tag.localname.xml
      5: punctuation.definition.tag.end.xml

  tag_internals:
  - meta_scope: meta.tag.xml
  - include: comments
  - match: '(?:({{id}})(:))?({{id}})(=)([''"])'
    captures:
      1: entity.name.attribute.namespace.xml
      2: punctuation.separator.namespace.xml
      3: entity.name.attribute.localname.xml
      4: punctuation.separator.attribute.xml
      5: punctuation.definition.string.xml
    push:
    - meta_scope: meta.attribute.xml
    - meta_content_scope: string.attribute.xml
    - meta_include_prototype: false
    - match: \5
      scope: punctuation.definition.string.xml
      pop: true
    - include: entities
    - include: substitutions
  - match: '(?:({{id}})(:))?({{id}})'
    captures:
      1: entity.name.attribute.namespace.xml
      2: punctuation.separator.namespace.xml
      3: entity.name.attribute.localname.xml

  doctype:
  - match: '(<!)(DOCTYPE)\s*({{id}})'
    captures:
      1: punctuation.definition.tag.begin.xml
      2: entity.name.tag.xml
      3: entity.name.doctype.element.xml
    push:
    - meta_scope: meta.tag.doctype.xml
    - match: '>'
      scope: punctuation.definition.tag.end.xml
      pop: true
    - match: (?>SYSTEM|PUBLIC)
      scope: keyword.doctype.xml
    - match: \[
      scope: punctuation.definition.doctype.begin.xml
      push:
      - match: \]
        scope: punctuation.definition.doctype.end.xml
        pop: true
      - include: doctype_element
    - include: quoted_strings

  doctype_element:
  - match: '(<!)((?>ELEMENT|ATTLIST))\s*({{id}})'
    captures:
      1: punctuation.definition.tag.begin.xml
      2: entity.name.tag.xml
      3: entity.name.doctype.element.xml
    push:
    - meta_scope: meta.tag.doctype.element.xml
    - match: '>'
      scope: punctuation.definition.tag.end.xml
      pop: true
    - include: quoted_strings

  substitutions:
  - match: '(\$\{).*?(?:(:).*?)?(\})'
    scope: variable.user.substitution.xml
    captures:
      1: punctuation.definition.substitution.xml
      2: punctuation.definition.substitution.xml
      3: punctuation.definition.substitution.xml
