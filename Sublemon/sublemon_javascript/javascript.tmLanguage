<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>js</string>
		<string>jsm</string>
	</array>
	<key>name</key>
	<string>JavaScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functions</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>/\*.*?\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.js</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(0[xX][0-9a-fA-F]+|0[0-7]+)\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?&lt;=\s|[=+*/%-(]|^)-)?\b[0-9]+\.?[0-9]*([eE][+-]?[0-9]+)?\b</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(false|Infinity|NaN|null|true|undefined)\b</string>
					<key>name</key>
					<string>constant.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][A-Z0-9_]+\b</string>
					<key>name</key>
					<string>variable.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(var|let)\b</string>
					<key>name</key>
					<string>storage.type.js</string>
				</dict>
			</array>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:\b([\w$]+)\s*(?:(=)|:)\s*(function)|(function)\s*([\w$]+)?)(?=\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.symbolic.js</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>meta.function.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\w+</string>
									<key>name</key>
									<string>variable.parameter.function.js</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while|yield|delete)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(new)\s+([\w_$]+)\b</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[&amp;|+-]{1,2}|([+*/%&amp;^|&lt;&gt;=-]|&lt;&lt;|&gt;&gt;&gt;?)=?|[=!]==?|&lt;&gt;</string>
					<key>name</key>
					<string>keyword.operator.symbolic.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[!~]</string>
					<key>name</key>
					<string>keyword.operator.unary.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ternary.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>:</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(in|of|typeof|void|with)\b</string>
					<key>name</key>
					<string>keyword.operator.character.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.character.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(instanceof)\s+([\w_$]+)\b</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(['"])</string>
					<key>end</key>
					<string>\1|(?&lt;!\\)\n</string>
					<key>name</key>
					<string>string.quoted.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[^'"\\](?=
)</string>
							<key>name</key>
							<string>invalid.string.quoted.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\([bfnrt'"\\]|u[0-9a-fA-F]{4})</string>
							<key>name</key>
							<string>constant.character.escape.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(?=\n)</string>
							<key>name</key>
							<string>constant.character.multiline.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>invalid.character.escape.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:,&amp;|?]|^|return)\s*(?=/[^/*+?])</string>
					<key>end</key>
					<string>(?&lt;=[/igm])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>/</string>
							<key>contentName</key>
							<string>source.regexp.js</string>
							<key>end</key>
							<string>/[igm]*</string>
							<key>name</key>
							<string>string.regexp.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.regexp</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(console|window|document)\b</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(JSON|Math|Object|Function)\b</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(decodeURI(Component)?|encodeURI(Component)?|eval|is(Finite|NaN)|parse(Float|Int))\b</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=.)bind(?=\s*\()</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([\w_$]+)\.(prototype)\b</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.js</string>
</dict>
</plist>
