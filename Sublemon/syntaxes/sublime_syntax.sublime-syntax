%YAML 1.2
---
name: Sublime Syntax
scope: source.yaml source.sublime-syntax
file_extensions: [sublime-syntax]

contexts:
  main:
  # Names of the contexts
  - match: '(?=^  [\w-]+:(\s+#|\s*$))'
    push:
    - meta_scope: meta.context.sublime-syntax
    - include: Packages/Sublemon/syntaxes/yaml.sublime-syntax#keys
    with_prototype:
    - match: (?=\s+#)|$
      pop: true

  - match: '^(contexts)(:)'
    captures:
      1: entity.name.key.yaml
      2: punctuation.separator.mapping.yaml
    push:
    - meta_scope: meta.section.contexts.sublime-syntax
    - include: main
  - match: '^(variables)(:)'
    captures:
      1: entity.name.key.yaml
      2: punctuation.separator.mapping.yaml
    push:
    - meta_scope: meta.section.variables.sublime-syntax
    - match: '(?=^contexts:)'
      pop: true
    - match: (\w+)(:)
      captures:
        1: entity.name.key.yaml
        2: punctuation.separator.mapping.yaml
      push: regexp-value
    - include: main

  - include: regexp-records
  - include: Packages/Sublemon/syntaxes/yaml.sublime-syntax

  regexp-records:
  - match: (match|escape|first_line_match)(:)
    captures:
      1: entity.name.key.yaml
      2: punctuation.separator.mapping.yaml
    push: regexp-value

  regexp-value:
  - match: \s+([>\|]-?)\s*(#.*)?$
    captures:
      1: keyword.operator.yaml
      2: comment.line.number-sign.yaml
    set:
    - match: ^(\s+)
      set:
      - meta_scope: source.regexp.embedded
      - include: scope:source.regexp
      with_prototype:
      - match: ^(?=\s*-?\s*\w+:)
        pop: true
      - include: variables
  - match: "'"
    scope: string.quoted.yaml
    set:
    - - match: (')|(\n)
        captures:
          1: string.quoted.yaml
          2: invalid.illegal.newline.yaml
        pop: true
    - - match: ''
        set: scope:source.regexp
        with_prototype:
        - include: variables
        - match: "''"
        - match: (?='|\n)
          pop: true
  - match: '"'
    scope: string.quoted.yaml
    set:
    - - match: (")|(\n)
        captures:
          1: string.quoted.yaml
          2: invalid.illegal.newline.yaml
        pop: true
    - - match: ''
        set: scope:source.regexp
        with_prototype:
        - include: variables
        - include: Packages/Sublemon/syntaxes/yaml.sublime-syntax#double_quoted_escapes
        - match: (?="|\n)
          pop: true
  - match: (?=\S)
    set: scope:source.regexp
    with_prototype:
    - include: variables
    - match: (?=\n|\s+#)
      pop: true
  - match: $
    pop: true

  variables:
  - match: '{{[A-Za-z0-9_]+}}'
    scope: variable.other.substitution.sublime-syntax
