%YAML 1.2
---
name: Dockerfile
scope: source.dockerfile
version: 2
file_extensions:
  - Dockerfile
  - .dockerfile

contexts:
  main:
    - include: comments

    - match: ^(?i)(ONBUILD)\s+(?=[a-z])
      captures:
        1: storage.type.onbuild.dockerfile
      push: instructions

    - match: ^(?i)(ONBUILD)(?=\s|$)
      captures:
        1: storage.type.onbuild.dockerfile

    - match: ^(?=[a-zA-Z])
      push: instructions

  instructions:
    - match: (?i)(RUN)(?=\s|$)
      captures:
        1: keyword.control.dockerfile
      set: shell-command

    - match: (?i)(ENV|ARG)\s+((\w+)\s.*)
      captures:
        1: keyword.control.dockerfile
        2: meta.declaration.variable.dockerfile
        3: variable.other.readwrite.dockerfile
      pop: 1

    - match: (?i)(ENV|ARG|LABEL)(?=\s|$)
      captures:
        1: keyword.control.dockerfile
      set: key-value

    - match: (?i)(CMD|ENTRYPOINT)(?=\s|$)
      captures:
        1: keyword.control.dockerfile
      set: json-or-shell-command

    - match: (?i)(HEALTHCHECK)\s+(NONE)
      captures:
        1: keyword.control.dockerfile
        2: constant.language.dockerfile
      pop: 1

    - match: (?i)(HEALTHCHECK)(?=\s|$)
      scope: keyword.control.dockerfile
      set:
        - match: \n
          pop: 1

        - include: escapes
        - include: greedy-comments
        - include: comments

        - match: (?i)CMD(?=\s|$)
          scope: keyword.control.dockerfile
          set: json-or-shell-command

    - match: (?i)(SHELL)(?=\s|$)
      captures:
        1: keyword.control.dockerfile
      set: json

    - match: (?i)(FROM|ADD|COPY|WORKDIR|USER|EXPOSE|VOLUME|STOPSIGNAL)(?=\s|$)
      captures:
        1: keyword.control.dockerfile
      pop: 1

  json-or-shell-command:
    - match: (?=\[)
      set: json
    - match: (?=\S)
      set: shell-command
    - match: \n
      pop: 1

  json:
    - meta_content_scope: meta.json.dockerfile
    - match: \n
      pop: 1

    - include: greedy-comments

    - match: (?=\[)
      embed: scope:source.json#array
      embed_scope: source.json
      escape: (?<=])

  shell-command:
    - meta_content_scope: meta.shell-command.dockerfile
    - match: \n
      pop: 1

    - include: greedy-comments

    - match: (?=\S)
      embed: scope:source.shell.bash
      escape: (?<!\\)(?=\n)|^(?=\s*#)

  key-value:
    - meta_content_scope: meta.key-value.dockerfile
    - match: \n
      pop: 1

    - include: greedy-comments
    - include: comments
    - include: escapes
    - include: expansions

    - match: ([\w\.]+)(=)
      captures:
        1: variable.other.readwrite.dockerfile
        2: keyword.operator.assignment.dockerfile
      push:
        - meta_scope: meta.declaration.variable.dockerfile
        - match: (?=\s|$)
          pop: 1
        - include: greedy-comments
        - include: comments
        - include: escapes
        - include: expansions
        - include: quoted-string

  quoted-string:
    - match: \"
      scope: punctuation.definition.string.begin.dockerfile
      push:
        - meta_scope: string.quoted.double.dockerfile
        - match: \"
          scope: punctuation.definition.string.end.dockerfile
          pop: 1
        - include: escapes
        - include: expansions
    - match: \'
      scope: punctuation.definition.string.begin.dockerfile
      push:
        - meta_scope: string.quoted.single.dockerfile
        - match: \'
          scope: punctuation.definition.string.end.dockerfile
          pop: 1

  comments:
    - match: (?:^|\s)((#).*)
      captures:
        1: comment.line.dockerfile
        2: punctuation.definition.comment.dockerfile

  greedy-comments:
    - match: ^\s*(#).*\n$
      scope: comment.line.dockerfile
      captures:
        1: punctuation.definition.comment.dockerfile

  escapes:
    - match: (\\)\n
      captures:
        1: punctuation.separator.continuation.line.dockerfile
    - match: \\.
      scope: constant.character.escape.dockerfile

  expansions:
    - match: (\$)(\{)(\w*)(\})
      scope: meta.interpolation.parameter.dockerfile
      captures:
        1: punctuation.definition.variable.dockerfile
        2: punctuation.section.interpolation.begin.dockerfile
        3: variable.other.readwrite.dockerfile
        4: punctuation.section.interpolation.end.dockerfile
    - match: (\$)(\w+)
      scope: meta.interpolation.parameter.dockerfile
      captures:
        1: punctuation.definition.variable.dockerfile
        2: variable.other.readwrite.dockerfile
