%YAML 1.2
---
name: Regular Expression
scope: source.regexp

variables:
  modifiers: \?[imsxXU]+

contexts:
  main:
  # Extended mode
  - match: (?=\(\?x\))
    push: simple_mode
    with_prototype:
    - match: ^\s*#.*$
      scope: comment.line.regexp

  - match: (?=\S)
    push: simple_mode

  simple_mode:
  - match: '\\[bBAZzG]|\^|\$'
    scope: keyword.control.anchor.regexp
  - match: '\\[1-9]\d*'
    scope: keyword.other.back-reference.regexp
  - match: '[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??'
    scope: keyword.operator.quantifier.regexp
  - match: \|
    scope: keyword.operator.or.regexp
  - match: '\({{modifiers}}\)'
    scope: keyword.modifier.regexp

  - include: characters

  # (?m:expr)
  - match: '(\()({{modifiers}}:)'
    captures:
      1: punctuation.definition.group.modifier.regexp
      2: keyword.modifier.regexp
    push:
    - meta_scope: meta.group.modifier.regexp
    - match: \)
      scope: punctuation.definition.group.modifier.regexp
      pop: true
    - include: simple_mode

  # (?=expr)
  - match: '\((\?(?>[:>|]|<?[=!]))?'
    scope: punctuation.definition.group.regexp
    push:
    - meta_scope: meta.group.regexp
    - match: \)
      scope: punctuation.definition.group.regexp
      pop: true
    - include: simple_mode

  # [expr]
  - match: '(\[)(\^)?'
    captures:
      1: punctuation.definition.character-class.regexp
      2: keyword.operator.negation.regexp
    push:
    - meta_scope: constant.language.character-class.regexp
    - match: \]
      scope: punctuation.definition.character-class.regexp
      pop: true
    - include: characters

  - match: '[\)\]]'
    scope: invalid.illegal.stray-bracket

  characters:
  - match: '\\[wWsSdDhHvVX]|\.'
    scope: constant.language.character-class.regexp
  - match: '\\p([A-Za-z]|\{[A-Za-z]+\})'
    scope: constant.character.unicode.regexp
  - match: '\\x([0-9A-F]{2}|\{[0-9A-F]+\})'
    scope: constant.character.hex.regexp
  - match: '\\c[A-Z]'
    scope: constant.character.control.regexp
  - match: \\.
    scope: constant.character.escape.backslash.regexp
